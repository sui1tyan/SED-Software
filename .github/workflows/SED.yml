name: Build SED App (auto-detect project dir)

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:

permissions:
  contents: write

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Locate project directory (has build_exe.py)
        shell: pwsh
        run: |
          $c = Get-ChildItem -Path $PWD -Recurse -File -Filter build_exe.py | Select-Object -First 1
          if (-not $c) { Write-Error "build_exe.py not found anywhere in repo"; exit 1 }
          $proj = $c.Directory.FullName
          "PROJ_DIR=$proj" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "PROJ_DIR_UNIX=$($proj -replace '\\','/')" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          Write-Host "Project dir: $proj"

      - name: Install dependencies
        shell: pwsh
        working-directory: ${{ env.PROJ_DIR }}
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") {
            pip install -r requirements.txt
          } else {
            pip install customtkinter==5.2.2 mysql-connector-python reportlab pyinstaller
          }

      - name: Build EXE (PyInstaller)
        shell: pwsh
        working-directory: ${{ env.PROJ_DIR }}
        run: python build_exe.py

      - name: Package source zip
        shell: pwsh
        working-directory: ${{ env.PROJ_DIR }}
        run: |
          $items = @('backend','gui','requirements.txt','README.md','build_exe.py','setup_windows.bat','config.json')
          $existing = $items | Where-Object { Test-Path $_ }
          if ($existing.Count -eq 0) { Write-Error "No source items found to zip"; exit 1 }
          Compress-Archive -Path $existing -DestinationPath "SED_Project_v2_source.zip" -Force

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: SED_App_v2-windows
          path: |
            ${{ env.PROJ_DIR_UNIX }}/dist/SED_App_v2.exe
            ${{ env.PROJ_DIR_UNIX }}/SED_Project_v2_source.zip
            ${{ env.PROJ_DIR_UNIX }}/README.md

      - name: Create GitHub Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.PROJ_DIR_UNIX }}/dist/SED_App_v2.exe
            ${{ env.PROJ_DIR_UNIX }}/SED_Project_v2_source.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
